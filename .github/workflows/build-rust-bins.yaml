# An alternative approach is to have the workflow create the release
# whenever you push a tag. It is described at:
#
#   https://trstringer.com/github-actions-create-release-upload-artifacts/
#
# I kind of like that idea, but need to think about how to handle the Cargo
# version check.
name: Build Rust Executables
on:
  workflow_dispatch:

jobs:
  build-linux-musl:
    runs-on: ubuntu-latest
    steps:
      # Following https://github.com/actions-rs/cargo#cross-compilation
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v2
        with:
          name: check-phase2-linux64
          path: target/release/check-phase2
  build-macos-darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v2
        with:
          name: check-phase2-apple-darwin64
          path: target/release/check-phase2
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-pc-windows-gnu
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release -vv
      - uses: actions/upload-artifact@v2
        with:
          name: check-phase2-windows64
          path: target\release\check-phase2.exe
